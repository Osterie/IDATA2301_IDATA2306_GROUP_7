package ntnu.no.stud.entities;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;

/**
 * Represents an accommodation feature associated with a flight.
 * Each accommodation has a unique identifier and acts as a many to many
 * relationship between flight and extra feature.
 */
@Entity
@Table(name = "flight_accommodation")
public class FlightAccommodation {

    /**
     * Unique identifier for the accommodation. Auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false)
    private int id;

    /**
     * The flight associated with this accommodation.
     */
    @ManyToOne
    @JoinColumn(name = "flight_id", nullable = false)
    private Flight flight;

    /**
     * The extra feature associated with this accommodation.
     */
    @ManyToOne
    @JoinColumn(name = "feature_id", nullable = false)
    private ExtraFeature extraFeature;

    public FlightAccommodation() {
    }

    /**
     * Constructs a FlightAccommodation with the specified flight and extra feature.
     *
     * @param flight       The flight associated with this accommodation.
     * @param extraFeature The extra feature associated with this accommodation.
     */
    public FlightAccommodation(Flight flight, ExtraFeature extraFeature) {
        this.flight = flight;
        this.extraFeature = extraFeature;
    }

    /**
     * Returns the unique identifier of the accommodation.
     *
     * @return the ID of the accommodation
     */
    public int getId() {
        return id;
    }

    /**
     * Sets the unique identifier of the accommodation.
     *
     * @param id the ID to set
     */
    public void setId(int id) {
        this.id = id;
    }

    /**
     * Returns the flight associated with this accommodation.
     *
     * @return the flight associated with this accommodation
     */
    public Flight getFlight() {
        return flight;
    }

    /**
     * Sets the flight associated with this accommodation.
     *
     * @param flight the flight to set
     */
    public void setFlight(Flight flight) {
        this.flight = flight;
    }

    /**
     * Returns the extra feature associated with this accommodation.
     *
     * @return the extra feature associated with this accommodation
     */
    public ExtraFeature getFeature() {
        return extraFeature;
    }

    /**
     * Sets the extra feature associated with this accommodation.
     *
     * @param extraFeature the extra feature to set
     */
    public void setFeature(ExtraFeature extraFeature) {
        this.extraFeature = extraFeature;
    }

}
